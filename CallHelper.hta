<!DOCTYPE html>
<html>
<head>
  <title>Call Helper</title>
  <hta:application
    id="CallHelperPRO"
    applicationname="Call Helper"
    border="none"
    singleinstance="yes"
    windowstate="normal" />

  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <style>
    * { box-sizing: border-box; }
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0;
      padding: 6px;
      background-color: #101820;
      color: #ffffff;
      max-width: 350px;
    }
    .section-title {
      margin-top: 18px;
      font-size: 14px;
      color: #ffaa00;
      padding-bottom: 4px;
      border-bottom: 1px solid #333;
      margin-bottom: 10px;
    }
    ul {
      list-style: none;
      padding: 0;
      margin: 0;
    }
    .check-item {
      display: flex;
      align-items: center;
      background-color: #1e2a38;
      padding: 5px;
      margin-bottom: 8px;
      border-radius: 6px;
      font-size: 10px;
      cursor: pointer;
      transition: transform 0.2s ease;
    }
    .check-item.checked-text {
      text-decoration: line-through;
      color: #00d4ff;
      animation: bounce 0.25s;
    }
    @keyframes bounce {
      0% { transform: scale(1); }
      50% { transform: scale(1.05); }
      100% { transform: scale(1); }
    }
    .check-symbol {
      font-size: 12px;
      margin-right: 10px;
      color: #ccc;
      transition: color 0.2s ease;
      user-select: none;
    }
    .check-symbol.checked {
      color: #00d4ff;
    }
	.check-symbol-optional {
      font-size: 12px;
      margin-right: 10px;
      color: #ccc;
      transition: color 0.2s ease;
      user-select: none;
    }
    .check-symbol-optional.checked {
      color: #00d4ff;
    }
    textarea {
      width: 100%;
      height: 80px;
      border-radius: 6px;
      padding: 8px;
      font-size: 13px;
      background-color: #1e2a38;
      color: #fff;
      border: none;
      margin-top: 6px;
	  resize: vertical;
	  
    }
    #reset {
      width: 25%;
      padding: 5px;
      background-color: #00d4ff;
      color: #000;
      border: none;
      font-weight: bold;
      border-radius: 6px;
      font-size: 10px;
      margin-top: 5px;
      cursor: pointer;
    }
    #reset:hover {
      background-color: #00b6d6;
    }
    input[type="text"] {
      width: calc(100% - 12px);
      padding: 6px;
      margin-bottom: 6px;
      border-radius: 4px;
      border: none;
      background-color: #1e2a38;
      color: #fff;
    }
	.help-icon {
	  position: absolute;
	  top: 8px;
	  right: 12px;
	  width: 20px;
	  height: 20px;
	  background-color: #ffaa00;
	  color: #101820;
	  font-weight: bold;
	  font-size: 14px;
	  text-align: center;
	  border-radius: 50%;
	  cursor: help;
	  line-height: 20px;
	  font-family: Arial, sans-serif;
	  user-select: none;
	  z-index: 1000;
	}
	.toggle-btn {
	  padding: 5px;
	  background-color: #00d4ff;
	  color: #000;
	  border: none;
	  font-weight: bold;
	  border-radius: 6px;
	  font-size: 12px;
	  cursor: pointer;
	  transition: background-color 0.2s ease;
	  margin-right: 10px;
	  height : 50%;
	}

	.toggle-btn:hover {
	  background-color: #00b6d6;
	}
	
	
	input[type="text"] {
	  flex-grow: 1;
	  padding: 6px;
	  border-radius: 4px;
	  border: none;
	  background-color: #1e2a38;
	  color: #fff;
	}
	#ipAddress {
	  width: 50% !important;
	}
	..collapse-btn {
	  background: none;
	  border: none;
	  color: #ffaa00;
	  font-weight: bold;
	  font-size: 24px;
	  cursor: pointer;
	  padding: 0 6px;
	  min-width: 22px;
	  text-align: center;
	  user-select: none;
	  line-height: 1;
	  text-decoration: none; 
	  cursor: default;
	}

	.collapse-btn:hover {
	  text-decoration: none; 
	  cursor: default;
	  color: #ffcc33;
	}

	.collapse-btn:focus {
	  outline: none;
	  text-decoration: none; 
	  cursor: default;
	}

	.collapse-btn:active {
	  text-decoration: none;
	  cursor: default;
	}
	.action-btn {
	  background-color: #00d4ff;
	  color: #000;
	  font-weight: bold;
	  border: none;
	  border-radius: 6px;
	  font-size: 12px;
	  height: 22px;
	  padding: 0 10px;
	  cursor: pointer;
	  transition: background-color 0.2s ease;
	  display: inline-block;
	  align-items: center;
	  user-select: none;
	  margin-right: 10px;
	  vertical-align: middle;	  
	}

	.action-btn:hover {
	  background-color: #00b6d6;
	}
  </style>
</head>
<body style="position: relative;">
<div class="help-icon" title="Original by Britton Bryant&#10;Modified by Christopher Temple">&#x2753;</div>


<div class="section-title" style="display: flex; align-items: center; justify-content: space-between;">
  <span>Utilities</span>
  <span class="collapse-btn" data-target="utilities">-</span>
</div>
<div id="utilities" style="gap: 6px; align-items: center;">
  <input type="text" id="ipAddress" placeholder="Enter IP or MAC">
  <button id="pingBtn" class="toggle-btn" style="height:auto;">Ping</button>
  <button id="lookupBtn" class="toggle-btn" style="height:auto;">MAC</button>
  <div>
  <button id="timerDisplay" class="action-btn" title="Hold Timer - Click to Start/Reset">00:00</button>
  <button id="lalBtn" class="action-btn">LAL</button>
  <button id="templateBtn" class="action-btn">Template</button>
  <span id="copyFeedback" style="color: #00d4ff; font-size: 12px; display: none;">Copied!</span>
</div>
</div>

<div class="section-title" style="display: flex; align-items: center; justify-content: space-between;">
  <span>Checklist</span>
  <span class="collapse-btn" data-target="checklist">-</span>
</div>
<ul id="checklist">
  <li class="check-item"><span class="check-symbol" data-checked="false">&#x1F4A1;</span> Discover Issue</li>
  <li class="check-item"><span class="check-symbol" data-checked="false">&#x2714;</span> ARM Statement</li>
  <li class="check-item"><span class="check-symbol" data-checked="false">&#x1F50E;</span> Troubleshooting Tree</li>
  <li class="check-item"><span class="check-symbol" data-checked="false">&#x2692;</span> Resolution / Next Steps</li>
  <li class="check-item"><span class="check-symbol" data-checked="false">&#x2709;</span> Helpful Hints / sb.net</li>
  <li class="check-item"><span class="check-symbol" data-checked="false">&#x1F501;</span> Recap the Call</li>
  <li class="check-item"><span class="check-symbol" data-checked="false">&#x1F3AF;</span> Closing Value Statement</li>
</ul>

<div class="section-title" style="display: flex; align-items: center; justify-content: space-between;">
  <span>Situational</span>
  <span class="collapse-btn" data-target="situational-checklist">-</span>
</div>
<ul id="situational-checklist">
 <li class="check-item"><span class="check-symbol-optional" data-checked="false">&#x1F512;</span> Account Authentication</li>  
  <li class="check-item"><span class="check-symbol-optional" data-checked="false">&#x1F509;</span> Offer / Enroll Voice ID</li>  
  <li class="check-item"><span class="check-symbol-optional" data-checked="false">&#x1F4DE;</span>Contact Preferences </li>
  <li class="check-item"><span class="check-symbol-optional" data-checked="false">&#36;</span>Credit ( Customer Commitment or Outage ) </li>
</ul>

<div id="notesContainer" style="position: relative; width: 100%; height: 80px;">
  <textarea id="notesTextarea" style="width: 100%; height: 100%;overflow: hidden;"></textarea>
  <div id="resizer" title="Click and drag to resize" style="position: absolute; right: 2px; bottom: 2px; width: 12px; height: 12px; cursor: se-resize; background-color: #ffaa00; border-radius: 2px; "></div>
</div>
<button id="reset">Reset All</button>


<canvas id="confetti-canvas" style="position:fixed;top:0;left:0;width:100%;height:100%;pointer-events:none;"></canvas>
<script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.5.1/dist/confetti.browser.min.js"></script>
<script language="javascript">
window.onload = function() {
  setTimeout(function() {
    window.resizeTo(375, 850);
    window.moveTo(400, 100);
  }, 100);


  var items = document.querySelectorAll('.check-item');
  for (var i = 0; i < items.length; i++) {
    items[i].onclick = function (e) {
      e = e || window.event;
      var icon = this.querySelector('.check-symbol');
      if (icon) {
        var isChecked = icon.classList.toggle('checked');
        icon.setAttribute('data-checked', isChecked);

        if (isChecked) {
          this.classList.add('checked-text');
        } else {
          this.classList.remove('checked-text');
        }

        checkAllChecked();
      }
	  var icon2 = this.querySelector('.check-symbol-optional');
      if (icon2) {
        var isChecked = icon2.classList.toggle('checked');
        icon2.setAttribute('data-checked', isChecked);

        if (isChecked) {
          this.classList.add('checked-text');
        } else {
          this.classList.remove('checked-text');
        }
      }
    };
  }

  document.getElementById("reset").onclick = function() {
    var icons = document.querySelectorAll('.check-symbol');
    for (var i = 0; i < icons.length; i++) {
      icons[i].classList.remove('checked');
      icons[i].setAttribute('data-checked', 'false');
      icons[i].parentNode.classList.remove('checked-text');
    }
	var icons2 = document.querySelectorAll('.check-symbol-optional');
    for (var i = 0; i < icons2.length; i++) {
      icons2[i].classList.remove('checked');
      icons2[i].setAttribute('data-checked', 'false');
      icons2[i].parentNode.classList.remove('checked-text');
    }
    document.querySelector("textarea").value = "";
  };

  function checkAllChecked() {
    var icons = document.querySelectorAll('.check-symbol');
    for (var i = 0; i < icons.length; i++) {
      if (!icons[i].classList.contains('checked')) {
        return;
      }
    }
    showPositiveCelebration();
  }

  function showPositiveCelebration() {
    confetti({
      particleCount: 150,
      spread: 70,
      origin: { y: 0.6 }
    });
  }

 };
</script>
<script>
  var timerInterval = null;
  var timerSeconds = 0;
  var timerDisplay = document.getElementById("timerDisplay");

  function pad(n) {
    return (n < 10) ? '0' + n : n;
  }

  function formatTime(seconds) {
    var m = Math.floor(seconds / 60);
    var s = seconds % 60;
    return pad(m) + ':' + pad(s);
  }

  function updateTimerDisplay() {
    timerDisplay.innerHTML = '&#x23F0; ' + formatTime(timerSeconds);
  }

  timerDisplay.onclick = function () {
    if (timerInterval) {
      // Stop and reset
      clearInterval(timerInterval);
      timerInterval = null;
      timerSeconds = 0;
      updateTimerDisplay();
    } else {
      // Reset if already at 3 mins
      if (timerSeconds >= 180) {
        timerSeconds = 0;
        updateTimerDisplay();
      }

      timerInterval = setInterval(function () {
        if (timerSeconds < 180) {
          timerSeconds++;
          updateTimerDisplay();
        } else {
          clearInterval(timerInterval);
          timerInterval = null;
        }
      }, 1000);
    }
  };

  updateTimerDisplay();
</script>

<script language="javascript">
  document.getElementById("pingBtn").onclick = function () {
    var ip = document.getElementById("ipAddress").value.trim();
    if (ip === "") {
      alert("Please enter an IP address.");
      return;
    }

    try {
      var shell = new ActiveXObject("WScript.Shell");
      shell.Run("cmd.exe /k ping -t " + ip);
    } catch (e) {
      alert("Failed to open command prompt. This may be blocked by your system settings.");
    }
  };
</script>

<script language="javascript">
  document.getElementById("lookupBtn").onclick = function () {
    var ipInput = document.getElementById("ipAddress");
    var macInput = ipInput.value.trim();

   
    var macAddress = macInput.replace(/[:\s]/g, "").toUpperCase();

    if (macAddress === "" || macAddress.length < 6) {
      alert("Please enter a valid MAC address.");
      return;
    }

    var xhr = new XMLHttpRequest();
    xhr.open("GET", "https://api.macvendors.com/" + macAddress, true);

    xhr.onreadystatechange = function() {
      if (xhr.readyState === 4) {
        if (xhr.status === 200) {
          ipInput.value = xhr.responseText;  
        } else {
          ipInput.value = "Vendor Not Found";
        }
      }
    };

    xhr.send();
  };
</script>

<script language="javascript">
  var collapseButtons = document.getElementsByClassName('collapse-btn');

  for (var i = 0; i < collapseButtons.length; i++) {
    collapseButtons[i].onclick = function() {
      var targetId = this.getAttribute('data-target');
      var target = document.getElementById(targetId);

      if (target.style.display === 'none') {
        target.style.display = '';
        this.innerText = '-';
      } else {
        target.style.display = 'none';
        this.innerText = '+';
      }
    };
  }
</script>

<script language="javascript">
  function showCopyFeedback() {
    var feedback = document.getElementById('copyFeedback');
    feedback.style.display = 'inline';
    setTimeout(function() {
      feedback.style.display = 'none';
    }, 1500);
  }

  document.getElementById('lalBtn').onclick = function() {
    window.clipboardData.setData('Text', '8775000');
    showCopyFeedback();
  };

  document.getElementById('templateBtn').onclick = function() {
    var templateText = "PID: \nAccount Number: \nBusiness Name: \nBusiness Address: \nCaller Name: \nIssue: \nTroubleshooting: ";
    window.clipboardData.setData('Text', templateText);
	// Open SCI CoPilot
	var shell = new ActiveXObject("WScript.Shell");
    shell.Run("https://www.google.com");
    showCopyFeedback();
  };
</script>

<script language="javascript">
	// resize notes script
  var resizer = document.getElementById('resizer');
  var container = document.getElementById('notesContainer');
  var isResizing = false;

  resizer.onmousedown = function(e) {
    isResizing = true;
    document.onmousemove = function(e) {
      if (isResizing) {
        var newHeight = e.clientY - container.getBoundingClientRect().top;
        if (newHeight > 50) { // Minimum height
          container.style.height = newHeight + 'px';
        }
      }
    };
    document.onmouseup = function() {
      isResizing = false;
      document.onmousemove = null;
      document.onmouseup = null;
    };
  };
</script>

<script language="javascript">
	// script for scrolling text area
  var notesTextarea = document.getElementById('notesTextarea');

  notesTextarea.onmousewheel = function(e) {
    e = e || window.event;
    var delta = e.wheelDelta ? e.wheelDelta : -e.detail;

    notesTextarea.scrollTop -= delta / 3; // Adjust scroll sensitivity
    return false; // Prevent page scrolling
  };
</script>

</body>
</html>
